

---
# ConfigMap for static HTML content
apiVersion: v1
kind: ConfigMap
metadata:
  name: portfolio-html
  namespace: dev
data:
  index.html: |
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Komlan Florient Dogbe - Red Hat Architect</title>
        <meta name="description" content="Professional profile of Komlan Florient Dogbe, Red Hat Architect">
        <link rel="stylesheet" href="styles.css">
    </head>
    <body>
        <header>
            <h1>Komlan Florient Dogbe</h1>
            <h2>Red Hat Architect</h2>
        </header>
        
        <section>
            <p>Welcome to my personal website. I specialize in cloud architecture, DevOps, and Red Hat solutions.</p>
            <p>Feel free to connect with me on LinkedIn:</p>
            <p><a href="https://www.linkedin.com/in/komlan-florient-dogbe-redhat-architect/" target="_blank">My LinkedIn Profile</a></p>
        </section>
        
        <footer>
            <p>&copy; 2025 Komlan Florient Dogbe. All Rights Reserved.</p>
        </footer>
    </body>
    </html>

---
# Deployment for the Nginx-based portfolio app
apiVersion: apps/v1
kind: Deployment
metadata:
  name: portfolio
  namespace: dev
  labels:
    app: portfolio
spec:
  replicas: 3
  selector:
    matchLabels:
      app: portfolio
  template:
    metadata:
      labels:
        app: portfolio
    spec:
      containers:
      - name: nginx
        image: docker.io/library/nginx:latest  # Use nginx:latest or a custom image
        ports:
        - containerPort: 80
        resources:
          limits:
            memory: "256Mi"
            cpu: "500m"
          requests:
            memory: "128Mi"
            cpu: "250m"
        volumeMounts:
        - name: html-content
          mountPath: /usr/share/nginx/html
      volumes:
      - name: html-content
        configMap:
          name: portfolio-html

---
# Service to expose the portfolio app internally
apiVersion: v1
kind: Service
metadata:
  name: portfolio-service
  namespace: dev
spec:
  selector:
    app: portfolio
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP

---
# Route to expose the portfolio app externally
 apiVersion: route.openshift.io/v1
 kind: Route
 metadata:
   name: portfolio-route
   namespace: dev
 spec:
   #host: portfolio.itssolutions.tech
   to:
     kind: Service
     name: portfolio-service
   port:
     targetPort: 80
   tls:
     termination: edge  # Enables HTTPS